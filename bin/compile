#!/bin/bash

indent() {
  sed -u 's/^/       /'
}

BUILD_DIR=$1
echo "Build DIR --- $BUILD_DIR"
CACHE_DIR=$2
echo "Cache DIR --- $CACHE_DIR"
ENV_DIR=$3
echo "Evn DIR --- $EVN_DIR"


POTRACE_VERSION="1.15"
CACHE_FILE="$CACHE_DIR/$POTRACE_VERSION.tar.gz"
echo "Cache file --- $CACHE_FILE"

VENDOR_DIR="$BUILD_DIR/vendor"
echo "Vendor DIR --- $VENDOR_DIR"

INSTALL_DIR="$VENDOR_DIR/potrace"
echo "Install DIR --- $INSTALL_DIR"

POTRACE_DIR="$BUILD_DIR/potrace-$POTRACE_VERSION"
echo "Potrace DIR --- $POTRACE_DIR"

mkdir -p $VENDOR_DIR
mkdir -p $INSTALL_DIR
mkdir -p $POTRACE_DIR


POTRACE_FILE="$POTRACE_VERSION.tar.gz"
echo "Potrace file --- $POTRACE_FILE"

POTRACE_URL="http://github.com/skyrpex/potrace/archive/$POTRACE_FILE" # use http because https to avoid ssl cert issues

download_potrace_source() {
  echo "------> Downloading Potrace from $POTRACE_URL"
  wget $POTRACE_URL -P $BUILD_DIR | indent

  if [ ! -f $BUILD_DIR/$POTRACE_FILE ]; then
    echo "Error: Unable to download Potrace" | indent
    ls $BUILD_DIR | indent
    exit 1;
  fi
}

extract_potrace_source() {
  cd $BUILD_DIR
  echo "------> Extracting Potrace from $POTRACE_FILE"
  tar xvf $POTRACE_FILE | indent
}

configure_and_make() {
  echo "------> Building Potrace"
  echo "Potrace DIR $POTRACE_DIR"
  cd $POTRACE_DIR

  export CPPFLAGS="-I$INSTALL_DIR/include"
  export LDFLAGS="-L$INSTALL_DIR/lib"
  ./configure --prefix=$INSTALL_DIR --disable-zlib
  make && install 
}

move_build_output_to_cache_dir(){
  cd $POTRACE_DIR
  echo "------> Copying $POTRACE_DIR to $INSTALL_DIR"
  cp -R * $INSTALL_DIR

  
  echo "------> Moving build output to cache_dir"
  cd ..
  tar czf $POTRACE_DIR.tar.gz $POTRACE_DIR
  mv $POTRACE_DIR.tar.gz $CACHE_FILE

  echo "------> Removing $POTRACE_DIR"
  rm -rf $POTRACE_DIR
}

build_from_cache() {
  echo "------> Extracting potrace $CACHE_FILE => $VENDOR_DIR"
  tar xzf $CACHE_FILE -C $INSTALL_DIR --strip 1
}


create_policy() {
  echo "------> Writing policy file"
  cat > $INSTALL_DIR/policy.xml <<EOF
  <policymap>
  <policy domain="coder" rights="none" pattern="EPHEMERAL" />
  <policy domain="coder" rights="none" parttern="HTTPS" /> 
  <policy domain="coder" rights="none" parttern="MVG" />
  <policy domain="coder" rights="none" parttern="MSL" />
  </policymap>
EOF
}

set_env_vars() {
  # update PATH and LD_LIBRARY_PATH
  echo "------> Updating enviroment variables"
  PROFILE_PATH="$BUILD_DIR/.profile.d/potrace.sh"
  ACTUAL_INSTALL_PATH="$INSTALL_DIR"

  mkdir -p $(dirname $PROFILE_PATH)
  echo "export PATH=$ACTUAL_INSTALL_PATH/bin:\$PATH" >> $PROFILE_PATH
  echo "export LD_LIBRARY_PATH=$ACTUAL_INSTALL_PATH/lib:\$LD_LIBRARY_PATH" >> $PROFILE_PATH
  echo "export POTRACE_CONFIGURE_PATH=$ACTUAL_INSTALL_PATH" >> $PROFILE_PATH
}

echo "------> Installing Potrace-$POTRACE_VERSION"

if [ ! -f $CACHE_FILE ]; then  
  download_potrace_source
  extract_potrace_source
  configure_and_make
  move_build_output_to_cache_dir
else
  build_from_cache
fi  

create_policy
set_env_vars


